// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SensorM.GsoCommon.ServerLibrary.Context;

#nullable disable

namespace DispatchingConsole.Server.Migrations
{
    [DbContext(typeof(PodsContext))]
    partial class PodsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("PodsProto.V1.ChatInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorityCreate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdUiConnect")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameRoom")
                        .HasColumnType("TEXT");

                    b.Property<int>("OutTypeConn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserCreate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserIdentityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserIdentityId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("PodsProto.V1.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorityUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChatInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatInfoId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("PodsProto.V1.ConnectInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorityUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChatInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatInfoId");

                    b.ToTable("Connects");
                });

            modelBuilder.Entity("PodsProto.V1.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorityUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameCu")
                        .HasColumnType("TEXT");

                    b.Property<int>("StaffId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SharedContact");
                });

            modelBuilder.Entity("PodsProto.V1.ManualContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorityUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameCu")
                        .HasColumnType("TEXT");

                    b.Property<int>("StaffId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserIdentityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserIdentityId");

                    b.ToTable("ContactForUser");
                });

            modelBuilder.Entity("PodsProto.V1.NoReadMessages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChatInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserIdentityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChatInfoId");

                    b.HasIndex("UserIdentityId");

                    b.ToTable("NoReadMessages");
                });

            modelBuilder.Entity("PodsProto.V1.UserIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorityUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PodsProto.V1.ChatInfo", b =>
                {
                    b.HasOne("PodsProto.V1.UserIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserIdentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodsProto.V1.ChatMessage", b =>
                {
                    b.HasOne("PodsProto.V1.ChatInfo", null)
                        .WithMany()
                        .HasForeignKey("ChatInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodsProto.V1.ConnectInfo", b =>
                {
                    b.HasOne("PodsProto.V1.ChatInfo", null)
                        .WithMany("Items")
                        .HasForeignKey("ChatInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodsProto.V1.ManualContactInfo", b =>
                {
                    b.HasOne("PodsProto.V1.UserIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserIdentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodsProto.V1.NoReadMessages", b =>
                {
                    b.HasOne("PodsProto.V1.ChatInfo", null)
                        .WithMany()
                        .HasForeignKey("ChatInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodsProto.V1.UserIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserIdentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PodsProto.V1.ChatInfo", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
