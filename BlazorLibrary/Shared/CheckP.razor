@using BlazorLibrary.Helpers

@if (IsAllowed)
{
    @ChildContent
}

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public int? BitPos { get; set; }

    [Parameter]
    public int[]? BitPosList { get; set; }

    [Parameter]
    public int? SystemID { get; set; }

    [Parameter]
    public CheckForInfo[]? CheckForSystem { get; set; }

    int SystemId => ParseUrlSegments.GetSystemId(MyNavigationManager.Uri);

    bool IsAllowed = false;

    protected override async Task OnInitializedAsync()
    {
        if (CheckForSystem?.Length > 0)
        {
            foreach (var item in CheckForSystem)
            {
                IsAllowed = await _User.CheckPermForSubsystem(item.SystemID, item.BitPosList);
                if (IsAllowed)
                {
                    return;
                }
            }
        }
        else
        {
            if (SystemID == null)
            {
                SystemID = SystemId;
            }

            if (BitPos != null && BitPosList == null)
            {
                BitPosList = [BitPos.Value];
            }
            IsAllowed = await _User.CheckPermForSubsystem(SystemID.Value, BitPosList);
        }

    }


    public class CheckForInfo
    {
        public int SystemID { get; set; }
        public int[] BitPosList { get; set; }

        public CheckForInfo(int systemID, int[] bitPosList)
        {
            SystemID = systemID;
            BitPosList = bitPosList;
        }
    }
}