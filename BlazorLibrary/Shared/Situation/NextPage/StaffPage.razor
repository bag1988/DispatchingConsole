@using SMControlSysProto.V1;
@using SharedLibrary.GlobalEnums

<ModalDialog Title="@StaffRep["ListSitForNotify"]" ButtonCloseEvent="Close">
    <BodyContent>
        <BlazorLibrary.Shared.FormComponent.FormDefault OnSumbit="Next">
            @if (StaffList != null)
            {
                <TableDefault IsSetFocus="false" IsOnKeyDown="false" TItem="SituationItem" Colspan="5" Items="StaffList" SetSelectList="SetSelectList" SelectList="@(SelectItem!=null ? new (){SelectItem}:null)" MinWidth="0">
                    <Thead>
                        <ThSort ThList="ThList" ThWidthProcent="@(new List<int>(){40,20,30,10})" />
                    </Thead>
                    <Tbody Context="item">
                    <td>@item.SitName</td>
                    <td>
                            @if (item.SitID.SubsystemID == SubsystemType.SUBSYST_GSO_STAFF)
                            {
                                @*Глобальный номер*@
                                @if (SelectItem?.Equals(item) ?? false)
                                {
                                <input type="number" @bind="item.SitID.ObjID" class="form-control form-control-sm" />
                                }
                                else
                                {
                                    @item.SitID.ObjID
                                }
                            }
                    </td>
                    <td>
                            @if (SelectItem?.Equals(item) ?? false)
                            {
                            <select class="form-select form-select-sm" @bind="item.CustMsg.ObjID">
                                <ItemsSelectMsg IsAllMsg="IsAllMsg" MsgList="MsgList" SubsystemID="SubsystemType.SUBSYST_GSO_STAFF" />
                            </select>
                            }
                            else
                            {
                                @(MsgList?.FirstOrDefault(x => x.OBJID != null && x.OBJID.ObjID == item.CustMsg.ObjID)?.Name ?? "")
                            }
                    </td>
                    <td>
                        <select class="form-select form-select-sm" @bind="item.ExInfoType">
                            <option value="@((int)ExInfoType.IDS_EX_NONE)">@GsoRep["IDS_EX_NONE"]</option>@*Не собирать*@
                            <option value="@((int)ExInfoType.IDS_EX_ALL)">@GsoRep["IDS_EX_ALL"]</option>@*Полная информация*@
                            <option value="@((int)ExInfoType.IDS_EX_GLOBAL)">@GsoRep["IDS_EX_GLOBAL"]</option>@*Глобальные объекты*@
                            <option value="@((int)ExInfoType.IDS_EX_FAIL)">@GsoRep["IDS_EX_FAIL"]</option>@*Неоповещенные объекты*@
                        </select>
                    </td>
                    </Tbody>
                </TableDefault>
            }
            else
            {
                <PNoData />
            }
            <ButtonModal>
                <label class="form-check-label me-2">
                    <input class="form-check-input" type="checkbox" checked="@IsAllMsg" disabled="@(IsReadOnly==true? "disabled": null)" @onchange="@((e)=>SetAllView(e))"> @Rep["AllMessage"]
                </label>
                <BDark OnClick="@(()=>{ViewInfoMessage=true; IsNewMessage=true;})" Text="@GsoRep["ID_RECORD"]" IsDisabled="@(IsReadOnly==true)" />
                @if (SelectItem?.CustMsg != null && SelectItem.CustMsg.ObjID != 0)
                {
                    <BDark OnClick="@(()=>{ViewInfoMessage=true; IsNewMessage=false;})" Text="@AsoRep["ReadMessage"]" />
                }
                else
                {
                    <BDark Text="@AsoRep["ReadMessage"]" IsDisabled="@(true)" />
                }
                <div class="ms-auto">
                    @if (IsReadOnly == false)
                    {
                        <CheckP BitPosList="@(new[]{NameBitsPos.CreateSit, NameBitsPos.CreateNoStandart})">
                            <BSumbit SetFocus="true" Text="@GsoRep["IDS_STRING_SAVE"]" IsProcessing="context" />
                        </CheckP>
                    }
                    else
                    {
                        <BDark Text="@GsoRep["IDS_STRING_SAVE"]" IsDisabled="@(true)" />
                    }
                    <BSecondary HotKey="@KeyCode.Escape" IsOutline="true" OnClick="Cancel" Text="@GsoRep["IDS_STRING_BACK"]" />
                    <BClose OnClick="Close" />
                </div>
            </ButtonModal>
        </BlazorLibrary.Shared.FormComponent.FormDefault>
    </BodyContent>
</ModalDialog>

<CheckP BitPosList="@(new[]{NameBitsPos.CreateSit, NameBitsPos.CreateNoStandart})">
    @if (ViewInfoMessage)
    {
        <CreateMessage TitleText="@GsoRep["IDS_REG_MESS_INSERT"]" CallBack="SaveCallBack" MsgId="@(IsNewMessage?null:SelectItem?.CustMsg?.ObjID)" Edit="IsNewMessage" />
    }
</CheckP>
