<div class="btn-group" @ref="div" tabindex="-1" @onblur="OnBlurAction">
    @ButtonContent

    <button type="button" class="btn btn-@ColorButton dropdown-toggle" @onclick="SetView">
    </button>

    @if (ChildContent != null)
    {
        <div @onmouseout="()=>IsMouseMovingChild=false" @onmouseover="()=>IsMouseMovingChild=true" class="dropdown-menu dropdown-menu-dark @(IsViewMenuTop?"bottom-100":"top-100") @(IsViewMenuLeft?"start-0":"end-0") @(IsViewAddMenu?"d-block":"")" @onclick="@(()=>IsViewAddMenu=false)" style="max-width:500px;">
            @ChildContent
        </div>
    }
</div>

@code {
    [Parameter]
    public RenderFragment? ButtonContent { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public string? ColorButton { get; set; } = "secondary";

    [Parameter]
    public bool IsViewMenuTop { get; set; } = true;

    [Parameter]
    public bool IsViewMenuLeft { get; set; } = true;

    bool IsViewAddMenu = false;

    bool IsMouseMovingChild = false;

    ElementReference? div;

    void OnBlurAction()
    {
        if (!IsMouseMovingChild)
            IsViewAddMenu = false;
    }
    void SetView()
    {
        IsViewAddMenu = !IsViewAddMenu;
        if (IsViewAddMenu && div != null)
            div?.FocusAsync();
    }
}
